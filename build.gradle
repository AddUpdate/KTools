// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

//apply from: "plugins/script.gradle"
apply from: "plugins/file.gradle"

buildscript {
    ext.kotlin_version = '1.2.41'
    ext.anko_version = '0.10.4'

    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        google()
    }

    repositories.each {
        println(it.getUrl())
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'org.aspectj:aspectjtools:1.8.10'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.vanniktech:gradle-dependency-graph-generator-plugin:0.4.0"
//        classpath 'com.google.3gms:google-services:3.1.0'
    }


}

apply plugin: "com.vanniktech.dependency.graph.generator"

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
//        maven {
//            url "$rootDir/node_modules/react-native/android"
//        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.whenTaskAdded {
    task ->
        if (task.name.contains('AndroidTest')) {
            task.enabled = false
        }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:all',
                             '-Xlint:-serial',
                             '-Xlint:-deprecation',
                             '-Werror']
}

//subprojects {
//
//    if(this.name == "app"){
//        apply plugin: 'com.android.application'
//    }else if (this.name == "compiler"){
//        apply plugin: 'java-library'
//    }else {
//        apply plugin: 'com.android.library'
//    }
//
//    android {
//        compileSdkVersion libVersion.compileSdkVersion
//        buildToolsVersion libVersion.buildToolsVersion
//
//        defaultConfig {
//            minSdkVersion libVersion.minSdkVersion
//            targetSdkVersion libVersion.targetSdkVersion
//        }
//    }
//
//}

