


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    //仅仅在编译的时候起作用，建议总是使用最新版本，值是一个API Level
    compileSdkVersion 29

    //构建工具的版本，在build-tools中的那些(aapt,dexdump,zipalign,apksigner)，一般是API-Level.x.x
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.jiangkang.ktools"

        //支持的最早版本，Lint会检查这之上的API的使用进行提示，app的minSdkVersion至少要和依赖的library一样大
        minSdkVersion 21

        //提供向前兼容的主要方式，除非targetSdkVersion更新，不应用新的行为变化，使你在应用新的行为变化之前可以使用新的API（compileSdkVersion）
        //更新targetSdkVersion的时候应该进行充分的测试
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [
//                        moduleName: project.getName()
////                        eventBusIndex : 'com.jiangkang.ktools.KEventBusIndex'
//                ]
//            }
//        }

        ndk {
            abiFilters "armeabi-v7a","x86"
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/layout/activity',
                    'src/main/res/layout/fragment',
                    'src/main/res/layout/widget',
                    'src/main/res/layout/item',
                    'src/main/res'
            ]
        }
    }


    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    dexOptions {
        javaMaxHeapSize = '4g'
    }

    lintOptions {

        lintConfig file("$rootDir/quality/lint/lint.xml")

        //关闭检查指定的Issue Id
//        disable 'TypographyFractions', 'TypographyQuotes'

        //打开指定的Issue的检查
//        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'

        //仅仅只检查这些的子集，其他的不检查，这个选项会覆盖上面的disable，enable配置
//        check 'NewApi', 'InlinedApi'

        //如果设置为true，则会关闭lint的分析进度
        quiet false

        //如果设置为true(默认)，如果发现错误就停止构建
        abortOnError false

        //如果设置为true，则只报告error
        ignoreWarnings false
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    dataBinding {
        enabled = true
    }


}

dependencies {

    configuration ->

        implementation fileTree(dir: 'libs', include: ['*.jar'])

        implementation 'androidx.legacy:legacy-support-v4:1.0.0'

        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0') {
            exclude group: 'com.android.support', module: 'support-annotations'
        }

        androidTestImplementation 'androidx.annotation:annotation:1.1.0'

        androidTestImplementation 'org.hamcrest:hamcrest-library:2.1'
        // Optional -- UI testing with UI Automator
        androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

        testImplementation "junit:junit:4.12"
        testImplementation 'org.robolectric:robolectric:4.3.1'
        testImplementation 'org.mockito:mockito-core:3.0.0'

        debugImplementation "com.squareup.leakcanary:leakcanary-android:1.5.1"
        releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.5.1"

        debugImplementation "com.amitshekhar.android:debug-db:1.0.0"
        debugImplementation('com.facebook.sonar:sonar:0.6.13') {
//        exclude group: 'android.arch.lifecycle', module: 'runtime'
        }

        implementation 'com.jakewharton:butterknife:10.2.0'
        kapt 'com.jakewharton:butterknife-compiler:10.2.0'

        implementation "io.reactivex.rxjava2:rxjava:2.2.6"
        implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.recyclerview:recyclerview:1.1.0'
        implementation 'androidx.cardview:cardview:1.0.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        implementation 'com.google.android.material:material:1.1.0'

        implementation 'com.squareup.retrofit2:retrofit:2.6.1'
        implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
        implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

        debugImplementation "com.readystatesoftware.chuck:library:1.1.0"
        releaseImplementation "com.readystatesoftware.chuck:library-no-op:1.1.0"

        implementation 'com.google.dagger:dagger-android:2.24'
        implementation 'com.google.dagger:dagger-android-support:2.24'
        kapt 'com.google.dagger:dagger-android-processor:2.24'

        implementation 'com.github.bumptech.glide:glide:4.11.0'
        implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0'
        kapt 'com.github.bumptech.glide:compiler:4.11.0'

        implementation 'com.squareup.okhttp3:okhttp:4.4.0'
        testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:4.2.0'

        implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'
        implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

        implementation 'androidx.room:room-runtime:2.2.5'
        implementation 'androidx.room:room-rxjava2:2.2.5'
        kapt 'androidx.room:room-compiler:2.2.5'

        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
        implementation "org.jetbrains.anko:anko:0.10.8"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'

        implementation 'androidx.multidex:multidex:2.0.1'

        implementation "org.greenrobot:eventbus:3.1.1"
        implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'

        implementation 'androidx.navigation:navigation-fragment:2.3.0-beta01'
        implementation 'androidx.navigation:navigation-ui:2.3.0-beta01'

        implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'


        implementation project(path: ':widget')
        implementation project(path: ':requests')
        implementation project(path: ':annotations')
        implementation project(path: ':hack')
        implementation project(path: ':tools')
        implementation project(path: ':kdownloader')
        implementation project(path: ':hybrid')
        implementation project(path: ':jni')
        implementation project(path: ':storage')
        kapt project(path: ':compiler')
        implementation project(path: ':jetpack')
        implementation project(path: ':anko')
        implementation project(path: ':image')
        lintChecks project(path: ':klint')
        implementation project(path: ':design')
        implementation project(path: ":container")

//        implementation project(':flutter')

}


task copy(type: Copy) {
    from "build/outputs/apk/debug/"
    into "build/outputs/apk/"
    include '**/*'
    delete "build/outputs/apk/debug/*"
}


repositories {
    jcenter()
    mavenCentral()
}
