import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//apply plugin: 'com.google.gms.google-services'


android {
    compileSdkVersion libVersion.compileSdkVersion
    buildToolsVersion libVersion.buildToolsVersion
    defaultConfig {
        applicationId "com.jiangkang.ktools"
        minSdkVersion libVersion.minSdkVersion
        targetSdkVersion libVersion.targetSdkVersion
        versionCode libVersion.versionCode
        versionName libVersion.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        ndk {
            abiFilters "x86", "armeabi"
//            abiFilters "armeabi-v7a"
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    dataBinding {
        enabled = true
    }


    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/layout/activity',
                    'src/main/res/layout/fragment',
                    'src/main/res/layout/widget',
                    'src/main/res/layout/item',
                    'src/main/res'
            ]
        }
    }

//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }


    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    dexOptions {
        javaMaxHeapSize = '4g'
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps['support-vector-drawable']
    implementation 'com.android.support:support-v4:26.1.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    testImplementation deps.robolectric

    debugImplementation deps["leakcanary"]
    releaseImplementation deps["leakcanary_no_op"]

    debugImplementation deps['debug_db']

    implementation deps["butterKnife"]
    annotationProcessor deps['butterknifeCompiler']

    implementation deps['rxAndroid']
    implementation deps['rxJava']

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    implementation deps.appcompat_v7
    implementation deps.recyclerview
    implementation deps.cardview
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation deps["retrofit"]
    implementation deps["retrofit_converterJson"]
    implementation deps["retrofit_adpter_rxjava2"]

    implementation deps.weex
    implementation 'com.alibaba:fastjson:1.1.67.android'

    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    implementation deps['dagger']
    annotationProcessor deps['daggerCompiler']

    implementation deps["glide"]
    implementation deps["glideOkhttp"]
    annotationProcessor deps["glideCompiler"]

    implementation deps['okhttp']
    implementation deps["okhttp-logging-interceptor"]

    implementation "android.arch.lifecycle:runtime:1.1.0"
    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation "android.arch.persistence.room:runtime:1.0.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
    implementation "android.arch.persistence.room:rxjava2:1.0.0"
    implementation deps.arouter.arouter_api
    annotationProcessor deps.arouter.arouter_compiler
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"

    implementation deps.multidex

    implementation project(path: ':widget')
    implementation project(path: ':requests')
    implementation project(path: ':annotations')
    implementation project(path: ':aop')
    implementation project(path: ':hack')
    implementation project(path: ':tools')
    implementation project(path: ':kdownloader')
    implementation project(path: ':weex')

    compile project(path: ':hybrid')
    compile project(path: ':jni')
}


task copy(type: Copy) {
    from "build/outputs/apk/debug/"
    into "build/outputs/apk/"
    include '**/*'
    delete "build/outputs/apk/debug/*"
}

project.android.applicationVariants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = [
                "-showWeaveInfo",
                "-1.5",
                "-inpath", javaCompile.destinationDir.toString(),
                "-aspectpath", javaCompile.classpath.asPath,
                "-d", javaCompile.destinationDir.toString(),
                "-classpath", javaCompile.classpath.asPath,
                "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
        ]

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler)

        def log = project.logger
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}
repositories {
    mavenCentral()
}